package com.msee.mseetv.module.home.api;

import java.util.HashMap;

import android.os.Message;

import com.google.gson.reflect.TypeToken;
import com.msee.mseetv.base.BaseAPI;
import com.msee.mseetv.base.BaseEntity;
import com.msee.mseetv.module.home.result.HotListResult;

public class HotFragmentApi extends BaseAPI {

	private static final String TAG = "HotFragmentAPI";

	private static final String URL_AD_LIST = "/ms/circle/ad_list";
	private static final String URL_USER_LIST = "/ms/circle/hotlist?";

	public static final int LOAD_BANNER_LIST = 0;
	public static final int LOAD_VIDEO_LIST = 1;
	
	private GetDataHandler mGetDataHandler;

	public HotFragmentApi(GetDataHandler mGetDataHandler)
	{
		this.mGetDataHandler = mGetDataHandler;
	}
	
	/**
	 * 发送banner列表请求
	 */
	public void sendBannerList() {
		// 发送banner列表请求
		Message loadBannerMsg = new Message();
		loadBannerMsg.arg1 = LOAD_BANNER_LIST;
		loadBannerMsg.setTarget(mGetDataHandler);
		getBannerList(loadBannerMsg, TAG);
	}

	/**
	 * 获取热门banner列表
	 * 
	 * @param msg
	 * @param tag
	 * @param pageNum
	 */
	public void getBannerList(Message msg, String tag) {
		java.lang.reflect.Type type = new TypeToken<BaseEntity<HotListResult>>() {
		}.getType();
		HashMap<String, Object> params = new HashMap<String, Object>();
		excuteHttpGet(URL_AD_LIST, msg, tag, params, type);
	}

	/**
	 * 发送banner列表请求
	 */
	public void sendHotVideoList( int pageNum) {
		// 发送视频列表请求
		Message loadVideoMsg = new Message();
		loadVideoMsg.arg1 = LOAD_VIDEO_LIST;
		loadVideoMsg.setTarget(mGetDataHandler);
		getHotVideoList(loadVideoMsg, TAG, pageNum);
	}

	/**
	 * 获取热门视频列表
	 * 
	 * @param msg
	 * @param tag
	 * @param pageNum
	 */
	public void getHotVideoList(Message msg, String tag, int pageNum) {
		java.lang.reflect.Type type = new TypeToken<BaseEntity<HotListResult>>() {
		}.getType();
		HashMap<String, Object> params = new HashMap<String, Object>();
		params.put("page", pageNum);
		excuteHttpGet(URL_USER_LIST, msg, tag, params, type);
	}

	/**
	 * 发送banner列表请求
	 */
	public void sendHotMessageList() {
		// 发送滚动信息列表请求
		Message loadMessageMsg = new Message();
		loadMessageMsg.arg1 = LOAD_MESSAGE_LIST;
		loadMessageMsg.setTarget(mGetDataHandler);
		getHotMessageList(loadMessageMsg, TAG);
	}

	/**
	 * 获取热门banner列表
	 * 
	 * @param msg
	 * @param tag
	 * @param pageNum
	 */
	public void getHotMessageList(Message msg, String tag) {
		java.lang.reflect.Type type = new TypeToken<BaseEntity<HotListResult>>() {
		}.getType();
		HashMap<String, Object> params = new HashMap<String, Object>();
		params.put("lasttime", System.currentTimeMillis());
		excuteHttpGet(URL_HOT_MESSAGE, msg, tag, params, type);
	}

}
